import sys
import typing
from PyQt5.QtWidgets import QApplication, QGraphicsScene, QGraphicsSceneMouseEvent, QGraphicsView, QMainWindow, QPushButton, QToolBar, QAction, QGraphicsRectItem, QGraphicsPolygonItem,QToolBar
from PyQt5.QtGui import QPolygonF, QBrush, QPen, QIcon, QPolygon
from PyQt5.QtCore import Qt, QPointF, QPoint
import classmodel as cm

v1 = cm.Drone('v1',[20,20,20],[300,300,20],0)
ang_drone=0


class MaSceneGraphique(QGraphicsScene):
    def __init__(self, parent=None):
        super(MaSceneGraphique, self).__init__(parent)

        self.addItem(QGraphicsRectItem(-5,-5, 10, 10))




class ObstacleItem(QGraphicsPolygonItem):
    def __init__(self,obstacle):

        self.obstacle = obstacle
        self.polygonpoints=[]
        #pour chaque vertices (x,y,z) je cree un point QTpointf et j'ajoute dans la liste
        for vertice in obstacle.verticies:
            self.polygonpoints.append(QPointF(vertice[0],vertice[1]))

        self.polygone = self.polygone = QPolygonF( self.polygonpoints )
        
        super(QGraphicsPolygonItem,self).__init__(self.polygone)
        
        #self.setRotation(self.drone.orient)
        self.setBrush(QBrush(Qt.cyan))
        self.setPen(QPen(Qt.blue))


class VehiculeItem(QGraphicsPolygonItem):
    def __init__(self,vehicule):

        self.drone = vehicule
        self.polygone = self.polygone = QPolygonF([
                        QPointF(vehicule.posit[0], vehicule.posit[1]),
                        QPointF(vehicule.posit[0] - 25, vehicule.posit[1] - 100),
                        QPointF(vehicule.posit[0] - 50, vehicule.posit[1]),
                        
                    ])
        
        super(QGraphicsPolygonItem,self).__init__(self.polygone)
        
        self.setRotation(self.drone.orient)
        self.setBrush(QBrush(Qt.red))
        self.setPen(QPen(Qt.blue))
    




class MaFenetrePrincipale(QMainWindow):
    def __init__(self):
        super(QMainWindow, self).__init__()
        
        self.scene = MaSceneGraphique(self)
        self.vue = QGraphicsView(self.scene)
        self.vue.fitInView(self.scene.itemsBoundingRect())
        self.setCentralWidget(self.vue)
        self.setGeometry(100, 100, 800, 600)
        self.setWindowTitle('Application avec Barre d\'Outils et Scène Graphique')
        toolbar=QToolBar("Paramètres")
        self.addToolBar(Qt.LeftToolBarArea,toolbar)
        toolbar.setMovable(False)


        bouton_ajouter_un_drone=QPushButton("Ajouter un drone")
        toolbar.addWidget(bouton_ajouter_un_drone)
        bouton_ajouter_un_drone.clicked.connect(self.ajoute_drone)

        bouton_ajouter_un_obstacle=QPushButton("Ajouter un obstacle")
        toolbar.addWidget(bouton_ajouter_un_obstacle)
        bouton_ajouter_un_obstacle.clicked.connect(self.ajoute_obstacle)
        
        self.show()

        self.model = cm.Modele()

        

    def ajoute_drone(self):
        #creer un drone
        drone = cm.Drone("AC1", [0,0,0,],[0,0,0], ang_drone)
        self.model.add_drone(drone)

        droneItem = VehiculeItem(drone)
        self.scene.addItem(droneItem)

    
    def ajoute_obstacle(self):
        verticies=[[0,0,1],[0,1,1],[1,1,1],[1,0,1]]
        obstacle = cm.Building("OBS1",verticies)
        self.model.add_building(obstacle)

        obstacleItem = ObstacleItem(obstacle)
        self.scene.addItem(obstacleItem)
    
     
        
    


def main():
    app = QApplication(sys.argv)
    print("c tout bon")
    fenetre = MaFenetrePrincipale()
    sys.exit(app.exec_())


if __name__ == '__main__':
    main()



Lbuild=[]
Lvehic=[]
